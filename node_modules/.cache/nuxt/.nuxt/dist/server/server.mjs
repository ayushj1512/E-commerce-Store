import { hasInjectionContext, getCurrentInstance, shallowReactive, reactive, effectScope, getCurrentScope, inject, toRef, shallowRef, isReadonly, isRef, isShallow, isReactive, toRaw, defineComponent, createElementBlock, provide, cloneVNode, h, ref, Suspense, Fragment, mergeProps, unref, useSSRContext, computed, defineAsyncComponent, onErrorCaptured, onServerPrefetch, createVNode, resolveDynamicComponent, createApp } from "vue";
import { $fetch as $fetch$1 } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/ofetch/dist/node.mjs";
import { baseURL } from "#internal/nuxt/paths";
import { createHooks } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/hookable/dist/index.mjs";
import { getContext, executeAsync } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/unctx/dist/index.mjs";
import { sanitizeStatusCode, createError as createError$1 } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/h3/dist/index.mjs";
import { shouldHydrate, createPinia, setActivePinia, defineStore } from "pinia";
import { defu } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/defu/dist/defu.mjs";
import { START_LOCATION, createMemoryHistory, createRouter as createRouter$1, RouterView, useRouter as useRouter$1 } from "vue-router";
import { toRouteMatcher, createRouter } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/radix3/dist/index.mjs";
import { hasProtocol, joinURL, withQuery, isScriptProtocol } from "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/ufo/dist/index.mjs";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/klona/dist/index.mjs";
import { ssrRenderAttrs, ssrRenderAttr, ssrRenderComponent, ssrRenderList, ssrInterpolate, ssrRenderSuspense, ssrRenderVNode } from "vue/server-renderer";
import { Camera, Menu, SearchIcon, ShoppingCart, User, Heart, X } from "lucide-vue-next";
import "slugify";
if (!globalThis.$fetch) {
  globalThis.$fetch = $fetch$1.create({
    baseURL: baseURL()
  });
}
if (!("global" in globalThis)) {
  globalThis.global = globalThis;
}
const nuxtLinkDefaults = { "componentName": "NuxtLink" };
const asyncDataDefaults = { "deep": false };
const appId = "nuxt-app";
function getNuxtAppCtx(id = appId) {
  return getContext(id, {
    asyncContext: false
  });
}
const NuxtPluginIndicator = "__nuxt_plugin";
function createNuxtApp(options) {
  let hydratingCount = 0;
  const nuxtApp = {
    _id: options.id || appId || "nuxt-app",
    _scope: effectScope(),
    provide: void 0,
    versions: {
      get nuxt() {
        return "4.1.2";
      },
      get vue() {
        return nuxtApp.vueApp.version;
      }
    },
    payload: shallowReactive({
      ...options.ssrContext?.payload || {},
      data: shallowReactive({}),
      state: reactive({}),
      once: /* @__PURE__ */ new Set(),
      _errors: shallowReactive({})
    }),
    static: {
      data: {}
    },
    runWithContext(fn) {
      if (nuxtApp._scope.active && !getCurrentScope()) {
        return nuxtApp._scope.run(() => callWithNuxt(nuxtApp, fn));
      }
      return callWithNuxt(nuxtApp, fn);
    },
    isHydrating: false,
    deferHydration() {
      if (!nuxtApp.isHydrating) {
        return () => {
        };
      }
      hydratingCount++;
      let called = false;
      return () => {
        if (called) {
          return;
        }
        called = true;
        hydratingCount--;
        if (hydratingCount === 0) {
          nuxtApp.isHydrating = false;
          return nuxtApp.callHook("app:suspense:resolve");
        }
      };
    },
    _asyncDataPromises: {},
    _asyncData: shallowReactive({}),
    _payloadRevivers: {},
    ...options
  };
  {
    nuxtApp.payload.serverRendered = true;
  }
  if (nuxtApp.ssrContext) {
    nuxtApp.payload.path = nuxtApp.ssrContext.url;
    nuxtApp.ssrContext.nuxt = nuxtApp;
    nuxtApp.ssrContext.payload = nuxtApp.payload;
    nuxtApp.ssrContext.config = {
      public: nuxtApp.ssrContext.runtimeConfig.public,
      app: nuxtApp.ssrContext.runtimeConfig.app
    };
  }
  nuxtApp.hooks = createHooks();
  nuxtApp.hook = nuxtApp.hooks.hook;
  {
    const contextCaller = async function(hooks, args) {
      for (const hook of hooks) {
        await nuxtApp.runWithContext(() => hook(...args));
      }
    };
    nuxtApp.hooks.callHook = (name, ...args) => nuxtApp.hooks.callHookWith(contextCaller, name, ...args);
  }
  nuxtApp.callHook = nuxtApp.hooks.callHook;
  nuxtApp.provide = (name, value) => {
    const $name = "$" + name;
    defineGetter(nuxtApp, $name, value);
    defineGetter(nuxtApp.vueApp.config.globalProperties, $name, value);
  };
  defineGetter(nuxtApp.vueApp, "$nuxt", nuxtApp);
  defineGetter(nuxtApp.vueApp.config.globalProperties, "$nuxt", nuxtApp);
  const runtimeConfig = options.ssrContext.runtimeConfig;
  nuxtApp.provide("config", runtimeConfig);
  return nuxtApp;
}
function registerPluginHooks(nuxtApp, plugin2) {
  if (plugin2.hooks) {
    nuxtApp.hooks.addHooks(plugin2.hooks);
  }
}
async function applyPlugin(nuxtApp, plugin2) {
  if (typeof plugin2 === "function") {
    const { provide: provide2 } = await nuxtApp.runWithContext(() => plugin2(nuxtApp)) || {};
    if (provide2 && typeof provide2 === "object") {
      for (const key in provide2) {
        nuxtApp.provide(key, provide2[key]);
      }
    }
  }
}
async function applyPlugins(nuxtApp, plugins2) {
  const resolvedPlugins = /* @__PURE__ */ new Set();
  const unresolvedPlugins = [];
  const parallels = [];
  let error = void 0;
  let promiseDepth = 0;
  async function executePlugin(plugin2) {
    const unresolvedPluginsForThisPlugin = plugin2.dependsOn?.filter((name) => plugins2.some((p) => p._name === name) && !resolvedPlugins.has(name)) ?? [];
    if (unresolvedPluginsForThisPlugin.length > 0) {
      unresolvedPlugins.push([new Set(unresolvedPluginsForThisPlugin), plugin2]);
    } else {
      const promise = applyPlugin(nuxtApp, plugin2).then(async () => {
        if (plugin2._name) {
          resolvedPlugins.add(plugin2._name);
          await Promise.all(unresolvedPlugins.map(async ([dependsOn, unexecutedPlugin]) => {
            if (dependsOn.has(plugin2._name)) {
              dependsOn.delete(plugin2._name);
              if (dependsOn.size === 0) {
                promiseDepth++;
                await executePlugin(unexecutedPlugin);
              }
            }
          }));
        }
      }).catch((e) => {
        if (!plugin2.parallel && !nuxtApp.payload.error) {
          throw e;
        }
        error ||= e;
      });
      if (plugin2.parallel) {
        parallels.push(promise);
      } else {
        await promise;
      }
    }
  }
  for (const plugin2 of plugins2) {
    if (nuxtApp.ssrContext?.islandContext && plugin2.env?.islands === false) {
      continue;
    }
    registerPluginHooks(nuxtApp, plugin2);
  }
  for (const plugin2 of plugins2) {
    if (nuxtApp.ssrContext?.islandContext && plugin2.env?.islands === false) {
      continue;
    }
    await executePlugin(plugin2);
  }
  await Promise.all(parallels);
  if (promiseDepth) {
    for (let i = 0; i < promiseDepth; i++) {
      await Promise.all(parallels);
    }
  }
  if (error) {
    throw nuxtApp.payload.error || error;
  }
}
// @__NO_SIDE_EFFECTS__
function defineNuxtPlugin(plugin2) {
  if (typeof plugin2 === "function") {
    return plugin2;
  }
  const _name = plugin2._name || plugin2.name;
  delete plugin2.name;
  return Object.assign(plugin2.setup || (() => {
  }), plugin2, { [NuxtPluginIndicator]: true, _name });
}
const definePayloadPlugin = defineNuxtPlugin;
function callWithNuxt(nuxt, setup, args) {
  const fn = () => setup();
  const nuxtAppCtx = getNuxtAppCtx(nuxt._id);
  {
    return nuxt.vueApp.runWithContext(() => nuxtAppCtx.callAsync(nuxt, fn));
  }
}
function tryUseNuxtApp(id) {
  let nuxtAppInstance;
  if (hasInjectionContext()) {
    nuxtAppInstance = getCurrentInstance()?.appContext.app.$nuxt;
  }
  nuxtAppInstance ||= getNuxtAppCtx(id).tryUse();
  return nuxtAppInstance || null;
}
function useNuxtApp(id) {
  const nuxtAppInstance = tryUseNuxtApp(id);
  if (!nuxtAppInstance) {
    {
      throw new Error("[nuxt] instance unavailable");
    }
  }
  return nuxtAppInstance;
}
// @__NO_SIDE_EFFECTS__
function useRuntimeConfig(_event) {
  return useNuxtApp().$config;
}
function defineGetter(obj, key, val) {
  Object.defineProperty(obj, key, { get: () => val });
}
const LayoutMetaSymbol = Symbol("layout-meta");
const PageRouteSymbol = Symbol("route");
import.meta.url.replace(/\/app\/.*$/, "/");
const useRouter = () => {
  return useNuxtApp()?.$router;
};
const useRoute = () => {
  if (hasInjectionContext()) {
    return inject(PageRouteSymbol, useNuxtApp()._route);
  }
  return useNuxtApp()._route;
};
// @__NO_SIDE_EFFECTS__
function defineNuxtRouteMiddleware(middleware) {
  return middleware;
}
const isProcessingMiddleware = () => {
  try {
    if (useNuxtApp()._processingMiddleware) {
      return true;
    }
  } catch {
    return false;
  }
  return false;
};
const URL_QUOTE_RE = /"/g;
const navigateTo = (to, options) => {
  to ||= "/";
  const toPath = typeof to === "string" ? to : "path" in to ? resolveRouteObject(to) : useRouter().resolve(to).href;
  const isExternalHost = hasProtocol(toPath, { acceptRelative: true });
  const isExternal = options?.external || isExternalHost;
  if (isExternal) {
    if (!options?.external) {
      throw new Error("Navigating to an external URL is not allowed by default. Use `navigateTo(url, { external: true })`.");
    }
    const { protocol } = new URL(toPath, "http://localhost");
    if (protocol && isScriptProtocol(protocol)) {
      throw new Error(`Cannot navigate to a URL with '${protocol}' protocol.`);
    }
  }
  const inMiddleware = isProcessingMiddleware();
  const router = useRouter();
  const nuxtApp = useNuxtApp();
  {
    if (nuxtApp.ssrContext) {
      const fullPath = typeof to === "string" || isExternal ? toPath : router.resolve(to).fullPath || "/";
      const location2 = isExternal ? toPath : joinURL((/* @__PURE__ */ useRuntimeConfig()).app.baseURL, fullPath);
      const redirect = async function(response) {
        await nuxtApp.callHook("app:redirected");
        const encodedLoc = location2.replace(URL_QUOTE_RE, "%22");
        const encodedHeader = encodeURL(location2, isExternalHost);
        nuxtApp.ssrContext._renderResponse = {
          statusCode: sanitizeStatusCode(options?.redirectCode || 302, 302),
          body: `<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=${encodedLoc}"></head></html>`,
          headers: { location: encodedHeader }
        };
        return response;
      };
      if (!isExternal && inMiddleware) {
        router.afterEach((final) => final.fullPath === fullPath ? redirect(false) : void 0);
        return to;
      }
      return redirect(!inMiddleware ? void 0 : (
        /* abort route navigation */
        false
      ));
    }
  }
  if (isExternal) {
    nuxtApp._scope.stop();
    if (options?.replace) {
      (void 0).replace(toPath);
    } else {
      (void 0).href = toPath;
    }
    if (inMiddleware) {
      if (!nuxtApp.isHydrating) {
        return false;
      }
      return new Promise(() => {
      });
    }
    return Promise.resolve();
  }
  return options?.replace ? router.replace(to) : router.push(to);
};
function resolveRouteObject(to) {
  return withQuery(to.path || "", to.query || {}) + (to.hash || "");
}
function encodeURL(location2, isExternalHost = false) {
  const url = new URL(location2, "http://localhost");
  if (!isExternalHost) {
    return url.pathname + url.search + url.hash;
  }
  if (location2.startsWith("//")) {
    return url.toString().replace(url.protocol, "");
  }
  return url.toString();
}
const NUXT_ERROR_SIGNATURE = "__nuxt_error";
const useError = () => toRef(useNuxtApp().payload, "error");
const showError = (error) => {
  const nuxtError = createError(error);
  try {
    const nuxtApp = useNuxtApp();
    const error2 = useError();
    if (false) ;
    error2.value ||= nuxtError;
  } catch {
    throw nuxtError;
  }
  return nuxtError;
};
const isNuxtError = (error) => !!error && typeof error === "object" && NUXT_ERROR_SIGNATURE in error;
const createError = (error) => {
  const nuxtError = createError$1(error);
  Object.defineProperty(nuxtError, NUXT_ERROR_SIGNATURE, {
    value: true,
    configurable: false,
    writable: false
  });
  return nuxtError;
};
async function getRouteRules(arg) {
  const path = typeof arg === "string" ? arg : arg.path;
  {
    useNuxtApp().ssrContext._preloadManifest = true;
    const _routeRulesMatcher = toRouteMatcher(
      createRouter({ routes: (/* @__PURE__ */ useRuntimeConfig()).nitro.routeRules })
    );
    return defu({}, ..._routeRulesMatcher.matchAll(path).reverse());
  }
}
function definePayloadReducer(name, reduce) {
  {
    useNuxtApp().ssrContext._payloadReducers[name] = reduce;
  }
}
const payloadPlugin = definePayloadPlugin(() => {
  definePayloadReducer(
    "skipHydrate",
    // We need to return something truthy to be treated as a match
    (data) => !shouldHydrate(data) && 1
  );
});
const unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU = /* @__PURE__ */ defineNuxtPlugin({
  name: "nuxt:head",
  enforce: "pre",
  setup(nuxtApp) {
    const head = nuxtApp.ssrContext.head;
    nuxtApp.vueApp.use(head);
  }
});
function toArray(value) {
  return Array.isArray(value) ? value : [value];
}
const _routes = [
  {
    name: "index",
    path: "/",
    component: () => import("./_nuxt/index-Bf6atn1Y.js")
  },
  {
    name: "cart",
    path: "/cart",
    component: () => import("./_nuxt/index-f1sTjZKy.js")
  },
  {
    name: "login",
    path: "/login",
    component: () => import("./_nuxt/index-DwcJBaIo.js")
  },
  {
    name: "search",
    path: "/search",
    component: () => import("./_nuxt/index-C1voo_R6.js")
  },
  {
    name: "parent-slug",
    path: "/:parent()/slug",
    component: () => import("./_nuxt/slug-Cw9mNQ72.js")
  },
  {
    name: "contact",
    path: "/contact",
    component: () => import("./_nuxt/index-CR-p-oBe.js")
  },
  {
    name: "profile",
    path: "/profile",
    meta: { "middleware": ["auth"] },
    component: () => import("./_nuxt/index-CkZ03I_3.js")
  },
  {
    name: "parent",
    path: "/:parent()",
    component: () => import("./_nuxt/index-BUlBStJC.js")
  },
  {
    name: "checkout",
    path: "/checkout",
    component: () => import("./_nuxt/index-PtgIAj03.js")
  },
  {
    name: "login-register",
    path: "/login/register",
    component: () => import("./_nuxt/register-DZ_DUkXN.js")
  },
  {
    name: "profile-orders",
    path: "/profile/orders",
    component: () => import("./_nuxt/orders-D7wmOCL1.js")
  },
  {
    name: "trending",
    path: "/trending",
    component: () => import("./_nuxt/index-D-UJSkQp.js")
  },
  {
    name: "wishlist",
    path: "/wishlist",
    component: () => import("./_nuxt/index-e-XQrzQ0.js")
  },
  {
    name: "profile-refunds",
    path: "/profile/refunds",
    meta: { "middleware": ["auth"] },
    component: () => import("./_nuxt/refunds-BG6MNfNm.js")
  },
  {
    name: "profile-support",
    path: "/profile/support",
    component: () => import("./_nuxt/support-CpMGkMo3.js")
  },
  {
    name: "influencer",
    path: "/influencer",
    component: () => import("./_nuxt/index-C8yMBtVx.js")
  },
  {
    name: "profile-vouchers",
    path: "/profile/vouchers",
    component: () => import("./_nuxt/vouchers-B9TElaP7.js")
  },
  {
    name: "add-product",
    path: "/add-product",
    component: () => import("./_nuxt/index-Bk4tu18w.js")
  },
  {
    name: "collection12",
    path: "/collection12",
    component: () => import("./_nuxt/index-BwSyMmWJ.js")
  },
  {
    name: "influencer-register",
    path: "/influencer/register",
    component: () => import("./_nuxt/register-BLtIQ7rl.js")
  },
  {
    name: "order-success",
    path: "/order-success",
    component: () => import("./_nuxt/index-BUROJ6XB.js")
  },
  {
    name: "profile-add-address",
    path: "/profile/add-address",
    component: () => import("./_nuxt/add-address-Cgdk3xA5.js")
  },
  {
    name: "profile-deactivation",
    path: "/profile/deactivation",
    component: () => import("./_nuxt/deactivation-DScxYzhO.js")
  },
  {
    name: "influencer-onboarding",
    path: "/influencer/onboarding",
    component: () => import("./_nuxt/onboarding-xI235yub.js")
  },
  {
    name: "parent-child",
    path: "/:parent()/:child()",
    component: () => import("./_nuxt/index-Z5mqs-oU.js")
  },
  {
    name: "parent-child-product-id",
    path: "/:parent()/:child()/:product()/:id()",
    component: () => import("./_nuxt/index-ByZBXXiW.js")
  }
];
const ROUTE_KEY_PARENTHESES_RE = /(:\w+)\([^)]+\)/g;
const ROUTE_KEY_SYMBOLS_RE = /(:\w+)[?+*]/g;
const ROUTE_KEY_NORMAL_RE = /:\w+/g;
function generateRouteKey(route) {
  const source = route?.meta.key ?? route.path.replace(ROUTE_KEY_PARENTHESES_RE, "$1").replace(ROUTE_KEY_SYMBOLS_RE, "$1").replace(ROUTE_KEY_NORMAL_RE, (r) => route.params[r.slice(1)]?.toString() || "");
  return typeof source === "function" ? source(route) : source;
}
function isChangingPage(to, from) {
  if (to === from || from === START_LOCATION) {
    return false;
  }
  if (generateRouteKey(to) !== generateRouteKey(from)) {
    return true;
  }
  const areComponentsSame = to.matched.every(
    (comp, index) => comp.components && comp.components.default === from.matched[index]?.components?.default
  );
  if (areComponentsSame) {
    return false;
  }
  return true;
}
const routerOptions0 = {
  scrollBehavior(to, from, savedPosition) {
    const nuxtApp = useNuxtApp();
    const hashScrollBehaviour = useRouter().options?.scrollBehaviorType ?? "auto";
    if (to.path === from.path) {
      if (from.hash && !to.hash) {
        return { left: 0, top: 0 };
      }
      if (to.hash) {
        return { el: to.hash, top: _getHashElementScrollMarginTop(to.hash), behavior: hashScrollBehaviour };
      }
      return false;
    }
    const routeAllowsScrollToTop = typeof to.meta.scrollToTop === "function" ? to.meta.scrollToTop(to, from) : to.meta.scrollToTop;
    if (routeAllowsScrollToTop === false) {
      return false;
    }
    const hookToWait = nuxtApp._runningTransition ? "page:transition:finish" : "page:loading:end";
    return new Promise((resolve) => {
      if (from === START_LOCATION) {
        resolve(_calculatePosition(to, from, savedPosition, hashScrollBehaviour));
        return;
      }
      nuxtApp.hooks.hookOnce(hookToWait, () => {
        requestAnimationFrame(() => resolve(_calculatePosition(to, from, savedPosition, hashScrollBehaviour)));
      });
    });
  }
};
function _getHashElementScrollMarginTop(selector) {
  try {
    const elem = (void 0).querySelector(selector);
    if (elem) {
      return (Number.parseFloat(getComputedStyle(elem).scrollMarginTop) || 0) + (Number.parseFloat(getComputedStyle((void 0).documentElement).scrollPaddingTop) || 0);
    }
  } catch {
  }
  return 0;
}
function _calculatePosition(to, from, savedPosition, defaultHashScrollBehaviour) {
  if (savedPosition) {
    return savedPosition;
  }
  const isPageNavigation = isChangingPage(to, from);
  if (to.hash) {
    return {
      el: to.hash,
      top: _getHashElementScrollMarginTop(to.hash),
      behavior: isPageNavigation ? defaultHashScrollBehaviour : "instant"
    };
  }
  return {
    left: 0,
    top: 0
  };
}
const configRouterOptions = {
  hashMode: false,
  scrollBehaviorType: "auto"
};
const routerOptions = {
  ...configRouterOptions,
  ...routerOptions0
};
const validate = /* @__PURE__ */ defineNuxtRouteMiddleware(async (to, from) => {
  let __temp, __restore;
  if (!to.meta?.validate) {
    return;
  }
  const result = ([__temp, __restore] = executeAsync(() => Promise.resolve(to.meta.validate(to))), __temp = await __temp, __restore(), __temp);
  if (result === true) {
    return;
  }
  const error = createError({
    fatal: false,
    statusCode: result && result.statusCode || 404,
    statusMessage: result && result.statusMessage || `Page Not Found: ${to.fullPath}`,
    data: {
      path: to.fullPath
    }
  });
  return error;
});
const manifest_45route_45rule = /* @__PURE__ */ defineNuxtRouteMiddleware(async (to) => {
  {
    return;
  }
});
const globalMiddleware = [
  validate,
  manifest_45route_45rule
];
const namedMiddleware = {
  auth: () => import("./_nuxt/auth-BN3AZtwB.js")
};
const plugin$1 = /* @__PURE__ */ defineNuxtPlugin({
  name: "nuxt:router",
  enforce: "pre",
  async setup(nuxtApp) {
    let __temp, __restore;
    let routerBase = (/* @__PURE__ */ useRuntimeConfig()).app.baseURL;
    const history = routerOptions.history?.(routerBase) ?? createMemoryHistory(routerBase);
    const routes = routerOptions.routes ? ([__temp, __restore] = executeAsync(() => routerOptions.routes(_routes)), __temp = await __temp, __restore(), __temp) ?? _routes : _routes;
    let startPosition;
    const router = createRouter$1({
      ...routerOptions,
      scrollBehavior: (to, from, savedPosition) => {
        if (from === START_LOCATION) {
          startPosition = savedPosition;
          return;
        }
        if (routerOptions.scrollBehavior) {
          router.options.scrollBehavior = routerOptions.scrollBehavior;
          if ("scrollRestoration" in (void 0).history) {
            const unsub = router.beforeEach(() => {
              unsub();
              (void 0).history.scrollRestoration = "manual";
            });
          }
          return routerOptions.scrollBehavior(to, START_LOCATION, startPosition || savedPosition);
        }
      },
      history,
      routes
    });
    nuxtApp.vueApp.use(router);
    const previousRoute = shallowRef(router.currentRoute.value);
    router.afterEach((_to, from) => {
      previousRoute.value = from;
    });
    Object.defineProperty(nuxtApp.vueApp.config.globalProperties, "previousRoute", {
      get: () => previousRoute.value
    });
    const initialURL = nuxtApp.ssrContext.url;
    const _route = shallowRef(router.currentRoute.value);
    const syncCurrentRoute = () => {
      _route.value = router.currentRoute.value;
    };
    nuxtApp.hook("page:finish", syncCurrentRoute);
    router.afterEach((to, from) => {
      if (to.matched[to.matched.length - 1]?.components?.default === from.matched[from.matched.length - 1]?.components?.default) {
        syncCurrentRoute();
      }
    });
    const route = {};
    for (const key in _route.value) {
      Object.defineProperty(route, key, {
        get: () => _route.value[key],
        enumerable: true
      });
    }
    nuxtApp._route = shallowReactive(route);
    nuxtApp._middleware ||= {
      global: [],
      named: {}
    };
    useError();
    if (!nuxtApp.ssrContext?.islandContext) {
      router.afterEach(async (to, _from, failure) => {
        delete nuxtApp._processingMiddleware;
        if (failure) {
          await nuxtApp.callHook("page:loading:end");
        }
        if (failure?.type === 4) {
          return;
        }
        if (to.redirectedFrom && to.fullPath !== initialURL) {
          await nuxtApp.runWithContext(() => navigateTo(to.fullPath || "/"));
        }
      });
    }
    try {
      if (true) {
        ;
        [__temp, __restore] = executeAsync(() => router.push(initialURL)), await __temp, __restore();
        ;
      }
      ;
      [__temp, __restore] = executeAsync(() => router.isReady()), await __temp, __restore();
      ;
    } catch (error2) {
      [__temp, __restore] = executeAsync(() => nuxtApp.runWithContext(() => showError(error2))), await __temp, __restore();
    }
    const resolvedInitialRoute = router.currentRoute.value;
    syncCurrentRoute();
    if (nuxtApp.ssrContext?.islandContext) {
      return { provide: { router } };
    }
    const initialLayout = nuxtApp.payload.state._layout;
    router.beforeEach(async (to, from) => {
      await nuxtApp.callHook("page:loading:start");
      to.meta = reactive(to.meta);
      if (nuxtApp.isHydrating && initialLayout && !isReadonly(to.meta.layout)) {
        to.meta.layout = initialLayout;
      }
      nuxtApp._processingMiddleware = true;
      if (!nuxtApp.ssrContext?.islandContext) {
        const middlewareEntries = /* @__PURE__ */ new Set([...globalMiddleware, ...nuxtApp._middleware.global]);
        for (const component of to.matched) {
          const componentMiddleware = component.meta.middleware;
          if (!componentMiddleware) {
            continue;
          }
          for (const entry2 of toArray(componentMiddleware)) {
            middlewareEntries.add(entry2);
          }
        }
        {
          const routeRules = await nuxtApp.runWithContext(() => getRouteRules({ path: to.path }));
          if (routeRules.appMiddleware) {
            for (const key in routeRules.appMiddleware) {
              if (routeRules.appMiddleware[key]) {
                middlewareEntries.add(key);
              } else {
                middlewareEntries.delete(key);
              }
            }
          }
        }
        for (const entry2 of middlewareEntries) {
          const middleware = typeof entry2 === "string" ? nuxtApp._middleware.named[entry2] || await namedMiddleware[entry2]?.().then((r) => r.default || r) : entry2;
          if (!middleware) {
            throw new Error(`Unknown route middleware: '${entry2}'.`);
          }
          try {
            if (false) ;
            const result = await nuxtApp.runWithContext(() => middleware(to, from));
            if (true) {
              if (result === false || result instanceof Error) {
                const error2 = result || createError({
                  statusCode: 404,
                  statusMessage: `Page Not Found: ${initialURL}`
                });
                await nuxtApp.runWithContext(() => showError(error2));
                return false;
              }
            }
            if (result === true) {
              continue;
            }
            if (result === false) {
              return result;
            }
            if (result) {
              if (isNuxtError(result) && result.fatal) {
                await nuxtApp.runWithContext(() => showError(result));
              }
              return result;
            }
          } catch (err) {
            const error2 = createError(err);
            if (error2.fatal) {
              await nuxtApp.runWithContext(() => showError(error2));
            }
            return error2;
          }
        }
      }
    });
    router.onError(async () => {
      delete nuxtApp._processingMiddleware;
      await nuxtApp.callHook("page:loading:end");
    });
    router.afterEach((to) => {
      if (to.matched.length === 0) {
        return nuxtApp.runWithContext(() => showError(createError({
          statusCode: 404,
          fatal: false,
          statusMessage: `Page not found: ${to.fullPath}`,
          data: {
            path: to.fullPath
          }
        })));
      }
    });
    nuxtApp.hooks.hookOnce("app:created", async () => {
      try {
        if ("name" in resolvedInitialRoute) {
          resolvedInitialRoute.name = void 0;
        }
        await router.replace({
          ...resolvedInitialRoute,
          force: true
        });
        router.options.scrollBehavior = routerOptions.scrollBehavior;
      } catch (error2) {
        await nuxtApp.runWithContext(() => showError(error2));
      }
    });
    return { provide: { router } };
  }
});
const reducers = [
  ["NuxtError", (data) => isNuxtError(data) && data.toJSON()],
  ["EmptyShallowRef", (data) => isRef(data) && isShallow(data) && !data.value && (typeof data.value === "bigint" ? "0n" : JSON.stringify(data.value) || "_")],
  ["EmptyRef", (data) => isRef(data) && !data.value && (typeof data.value === "bigint" ? "0n" : JSON.stringify(data.value) || "_")],
  ["ShallowRef", (data) => isRef(data) && isShallow(data) && data.value],
  ["ShallowReactive", (data) => isReactive(data) && isShallow(data) && toRaw(data)],
  ["Ref", (data) => isRef(data) && data.value],
  ["Reactive", (data) => isReactive(data) && toRaw(data)]
];
const revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms = /* @__PURE__ */ defineNuxtPlugin({
  name: "nuxt:revive-payload:server",
  setup() {
    for (const [reducer, fn] of reducers) {
      definePayloadReducer(reducer, fn);
    }
  }
});
defineComponent({
  name: "ServerPlaceholder",
  render() {
    return createElementBlock("div");
  }
});
const clientOnlySymbol = Symbol.for("nuxt:client-only");
defineComponent({
  name: "ClientOnly",
  inheritAttrs: false,
  props: ["fallback", "placeholder", "placeholderTag", "fallbackTag"],
  ...false,
  setup(props, { slots, attrs }) {
    const mounted = shallowRef(false);
    const vm = getCurrentInstance();
    if (vm) {
      vm._nuxtClientOnly = true;
    }
    provide(clientOnlySymbol, true);
    return () => {
      if (mounted.value) {
        const vnodes = slots.default?.();
        if (vnodes && vnodes.length === 1) {
          return [cloneVNode(vnodes[0], attrs)];
        }
        return vnodes;
      }
      const slot = slots.fallback || slots.placeholder;
      if (slot) {
        return h(slot);
      }
      const fallbackStr = props.fallback || props.placeholder || "";
      const fallbackTag = props.fallbackTag || props.placeholderTag || "span";
      return createElementBlock(fallbackTag, attrs, fallbackStr);
    };
  }
});
const plugin = /* @__PURE__ */ defineNuxtPlugin({
  name: "pinia",
  setup(nuxtApp) {
    const pinia = createPinia();
    nuxtApp.vueApp.use(pinia);
    setActivePinia(pinia);
    {
      nuxtApp.payload.pinia = toRaw(pinia.state.value);
    }
    return {
      provide: {
        pinia
      }
    };
  }
});
const components_plugin_4kY4pyzJIYX99vmMAAIorFf3CnAaptHitJgf7JxiED8 = /* @__PURE__ */ defineNuxtPlugin({
  name: "nuxt:global-components"
});
const plugins = [
  payloadPlugin,
  unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU,
  plugin$1,
  revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms,
  plugin,
  components_plugin_4kY4pyzJIYX99vmMAAIorFf3CnAaptHitJgf7JxiED8
];
const defineRouteProvider = (name = "RouteProvider") => defineComponent({
  name,
  props: {
    route: {
      type: Object,
      required: true
    },
    vnode: Object,
    vnodeRef: Object,
    renderKey: String,
    trackRootNodes: Boolean
  },
  setup(props) {
    const previousKey = props.renderKey;
    const previousRoute = props.route;
    const route = {};
    for (const key in props.route) {
      Object.defineProperty(route, key, {
        get: () => previousKey === props.renderKey ? props.route[key] : previousRoute[key],
        enumerable: true
      });
    }
    provide(PageRouteSymbol, shallowReactive(route));
    return () => {
      if (!props.vnode) {
        return props.vnode;
      }
      return h(props.vnode, { ref: props.vnodeRef });
    };
  }
});
const RouteProvider = defineRouteProvider();
const __nuxt_component_0 = defineComponent({
  name: "NuxtPage",
  inheritAttrs: false,
  props: {
    name: {
      type: String
    },
    transition: {
      type: [Boolean, Object],
      default: void 0
    },
    keepalive: {
      type: [Boolean, Object],
      default: void 0
    },
    route: {
      type: Object
    },
    pageKey: {
      type: [Function, String],
      default: null
    }
  },
  setup(props, { attrs, slots, expose }) {
    const nuxtApp = useNuxtApp();
    const pageRef = ref();
    inject(PageRouteSymbol, null);
    expose({ pageRef });
    inject(LayoutMetaSymbol, null);
    nuxtApp.deferHydration();
    return () => {
      return h(RouterView, { name: props.name, route: props.route, ...attrs }, {
        default: (routeProps) => {
          return h(Suspense, { suspensible: true }, {
            default() {
              return h(RouteProvider, {
                vnode: slots.default ? normalizeSlot(slots.default, routeProps) : routeProps.Component,
                route: routeProps.route,
                vnodeRef: pageRef
              });
            }
          });
        }
      });
    };
  }
});
function normalizeSlot(slot, data) {
  const slotContent = slot(data);
  return slotContent.length === 1 ? h(slotContent[0]) : h(Fragment, void 0, slotContent);
}
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$6 = {
  __name: "CommonHeaderSearch",
  __ssrInlineRender: true,
  props: {
    recentSearches: { type: Array, default: () => ["Crop Tops", "Black Jeans", "Sneakers"] },
    popularSearches: { type: Array, default: () => ["Maxi Dress", "Sunglasses", "Flats", "Belts"] }
  },
  emits: ["search", "image-search"],
  setup(__props, { emit: __emit }) {
    useRouter$1();
    const query = ref("");
    const showDropdown = ref(false);
    ref(null);
    ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "relative w-full md:max-w-md" }, _attrs))} data-v-cf05830e><div class="flex items-center relative bg-white border border-gray-300 rounded-full shadow-sm focus-within:ring-2 focus-within:ring-black transition" data-v-cf05830e><input type="text"${ssrRenderAttr("value", query.value)} placeholder="Search products..." class="flex-1 px-4 py-2 rounded-full focus:outline-none text-gray-700" data-v-cf05830e><button class="absolute right-3 text-gray-400 hover:text-gray-700 transition text-lg" title="Search by Image" data-v-cf05830e>`);
      _push(ssrRenderComponent(unref(Camera), { class: "w-5 h-5" }, null, _parent));
      _push(`</button><input type="file" accept="image/*" class="hidden" data-v-cf05830e></div>`);
      if (showDropdown.value && (__props.recentSearches.length || __props.popularSearches.length)) {
        _push(`<div class="absolute top-full left-0 w-full bg-white shadow-lg rounded-xl mt-2 z-50 border border-gray-200 text-sm" data-v-cf05830e>`);
        if (__props.recentSearches.length) {
          _push(`<div class="p-3 border-b border-gray-200" data-v-cf05830e><p class="text-gray-500 mb-2 font-medium" data-v-cf05830e>Recently Searched</p><ul data-v-cf05830e><!--[-->`);
          ssrRenderList(__props.recentSearches, (item) => {
            _push(`<li class="py-2 px-3 rounded-lg hover:bg-gray-100 cursor-pointer text-gray-700 transition" data-v-cf05830e>${ssrInterpolate(item)}</li>`);
          });
          _push(`<!--]--></ul></div>`);
        } else {
          _push(`<!---->`);
        }
        if (__props.popularSearches.length) {
          _push(`<div class="p-3" data-v-cf05830e><p class="text-gray-500 mb-2 font-medium" data-v-cf05830e>Popular Searches</p><ul class="flex flex-wrap gap-2" data-v-cf05830e><!--[-->`);
          ssrRenderList(__props.popularSearches, (item) => {
            _push(`<li class="bg-yellow-400 text-black px-3 py-1 rounded-full cursor-pointer hover:bg-yellow-500 transition transform hover:scale-105" data-v-cf05830e>${ssrInterpolate(item)}</li>`);
          });
          _push(`<!--]--></ul></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
};
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/common/HeaderSearch.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const HeaderSearch = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["__scopeId", "data-v-cf05830e"]]);
const useCartStore = defineStore("cart", {
  state: () => ({
    items: []
    // Each item: { id, name, price, quantity, size?, image?, _key }
  }),
  getters: {
    totalQuantity: (state) => state.items.reduce((sum, item) => sum + item.quantity, 0),
    totalPrice: (state) => state.items.reduce((sum, item) => sum + item.price * item.quantity, 0)
  },
  actions: {
    generateKey(product) {
      return `${product.id}-${product.size ?? ""}`;
    },
    addToCart(product) {
      const key = this.generateKey(product);
      const existingItem = this.items.find((item) => item._key === key);
      if (existingItem) {
        existingItem.quantity += product.quantity || 1;
      } else {
        this.items.push({
          ...product,
          quantity: product.quantity || 1,
          _key: key
        });
      }
      this.saveCart();
    },
    removeFromCart(product) {
      const key = this.generateKey(product);
      this.items = this.items.filter((item) => item._key !== key);
      this.saveCart();
    },
    updateQuantity(product, quantity, size) {
      const key = this.generateKey({ ...product, size });
      const item = this.items.find((i) => i._key === key);
      if (item) {
        if (quantity <= 0) {
          this.removeFromCart(product);
        } else {
          item.quantity = quantity;
        }
      }
      this.saveCart();
    },
    clearCart() {
      this.items = [];
      this.saveCart();
    },
    /** -------------------------------
     * 🔄 Persist cart to localStorage safely
     * ------------------------------- */
    saveCart() {
    },
    /** -------------------------------
     * 🔄 Load cart from localStorage safely
     * ------------------------------- */
    loadCart() {
    }
  },
  // 🔑 Pinia Persist Config (optional if you want auto persistence)
  persist: {
    enabled: false
    // disabled because we handle persistence manually
  }
});
const _sfc_main$5 = {
  __name: "CommonHeader",
  __ssrInlineRender: true,
  setup(__props) {
    const cart = useCartStore();
    const router = useRouter$1();
    const menus = [
      { name: "Tops", items: ["Crop Tops", "Blouses", "Shirts", "Tunics", "Graphic Tees"] },
      { name: "Dresses", items: ["Party Dresses", "Casual Dresses", "Maxi Dresses", "Midi Dresses"] },
      { name: "Bottoms", items: ["Jeans", "Skirts", "Shorts", "Trousers", "Leggings"] },
      { name: "Accessories", items: ["Bags", "Belts", "Hats", "Scarves", "Sunglasses"] },
      { name: "Footwear", items: ["Flats", "Heels", "Sneakers", "Sandals"] }
    ];
    const recentSearches = ref(["Crop Tops", "Black Jeans", "Sneakers"]);
    const popularSearches = ref(["Maxi Dress", "Sunglasses", "Flats", "Belts"]);
    const mobileSidebarOpen = ref(false);
    const openMenus = ref([]);
    const isClient = ref(false);
    const showMiniCart = ref(false);
    const navigateTo2 = (path) => {
      router.push(path);
      mobileSidebarOpen.value = false;
    };
    const navigateToSearch = (query) => {
      if (query) router.push(`/search-results?query=${encodeURIComponent(query)}`);
      else router.push("/search");
    };
    const totalCartItems = computed(() => {
      return cart.items.reduce((total, item) => total + item.quantity, 0);
    });
    const handleImageSearch = (file) => console.log("Image uploaded for search:", file);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<header${ssrRenderAttrs(mergeProps({ class: "bg-white text-black shadow-md sticky top-0 z-50" }, _attrs))} data-v-f5f84525><div class="flex items-center justify-between px-4 py-3 md:hidden" data-v-f5f84525><button class="focus:outline-none" data-v-f5f84525>`);
      _push(ssrRenderComponent(unref(Menu), { class: "w-6 h-6" }, null, _parent));
      _push(`</button><div class="cursor-pointer" data-v-f5f84525><img src="https://images.streetstylestore.com/new-sssnew-images/sss-logo.jpg" alt="Street Style Store" class="h-10 object-contain" data-v-f5f84525></div><div class="flex items-center space-x-4 relative" data-v-f5f84525><button class="hover:text-gray-600 transition-colors" data-v-f5f84525>`);
      _push(ssrRenderComponent(unref(SearchIcon), { class: "w-6 h-6" }, null, _parent));
      _push(`</button><div class="relative cursor-pointer" data-v-f5f84525>`);
      _push(ssrRenderComponent(unref(ShoppingCart), { class: "w-6 h-6 hover:text-gray-600 transition-colors" }, null, _parent));
      if (totalCartItems.value > 0) {
        _push(`<span class="absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold px-1.5 py-0.5 rounded-full" data-v-f5f84525>${ssrInterpolate(totalCartItems.value)}</span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
      _push(ssrRenderComponent(unref(User), {
        class: "w-6 h-6 hover:text-gray-600 cursor-pointer transition-colors",
        onClick: ($event) => navigateTo2("/profile")
      }, null, _parent));
      _push(ssrRenderComponent(unref(Heart), {
        class: "w-6 h-6 hover:text-gray-600 cursor-pointer transition-colors",
        onClick: ($event) => navigateTo2("/wishlist")
      }, null, _parent));
      _push(`</div></div><div class="hidden md:flex items-center justify-between px-6 py-3 relative" data-v-f5f84525><div class="cursor-pointer" data-v-f5f84525><img src="https://images.streetstylestore.com/new-sssnew-images/sss-logo.jpg" alt="Street Style Store" class="h-12 object-contain" data-v-f5f84525></div><div class="flex items-center space-x-6 w-full max-w-3xl" data-v-f5f84525><nav class="flex space-x-4 flex-1" data-v-f5f84525><!--[-->`);
      ssrRenderList(menus, (menu) => {
        _push(`<div class="relative cursor-pointer" data-v-f5f84525><button class="font-medium hover:text-gray-600 transition-colors" data-v-f5f84525>${ssrInterpolate(menu.name)}</button></div>`);
      });
      _push(`<!--]--></nav>`);
      if (isClient.value) {
        _push(ssrRenderComponent(HeaderSearch, {
          class: "flex-1",
          "recent-searches": recentSearches.value,
          "popular-searches": popularSearches.value,
          onSearch: navigateToSearch,
          onImageSearch: handleImageSearch
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center space-x-4 relative" data-v-f5f84525><div class="relative cursor-pointer" data-v-f5f84525>`);
      _push(ssrRenderComponent(unref(ShoppingCart), { class: "w-6 h-6 hover:text-gray-600 transition-colors" }, null, _parent));
      if (totalCartItems.value > 0) {
        _push(`<span class="absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold px-1.5 py-0.5 rounded-full" data-v-f5f84525>${ssrInterpolate(totalCartItems.value)}</span>`);
      } else {
        _push(`<!---->`);
      }
      if (showMiniCart.value && unref(cart).items.length > 0) {
        _push(`<div class="absolute right-0 mt-2 w-80 bg-white shadow-lg border rounded-xl p-4 z-50" data-v-f5f84525><div class="max-h-64 overflow-y-auto space-y-4" data-v-f5f84525><!--[-->`);
        ssrRenderList(unref(cart).items, (item) => {
          _push(`<div class="flex items-center justify-between" data-v-f5f84525><div class="flex items-center space-x-3 cursor-pointer" data-v-f5f84525><img${ssrRenderAttr("src", item.image)} alt="Product" class="w-12 h-16 object-cover rounded-lg" data-v-f5f84525><div data-v-f5f84525><h4 class="font-semibold text-sm" data-v-f5f84525>${ssrInterpolate(item.name)}</h4>`);
          if (item.size) {
            _push(`<p class="text-xs text-gray-500" data-v-f5f84525>Size: ${ssrInterpolate(item.size)}</p>`);
          } else {
            _push(`<!---->`);
          }
          _push(`<p class="font-bold text-sm" data-v-f5f84525>₹${ssrInterpolate(item.price)}</p></div></div><div class="flex items-center space-x-1" data-v-f5f84525><button class="px-1 py-0.5 border rounded hover:bg-gray-100" data-v-f5f84525>-</button><span class="text-sm font-medium" data-v-f5f84525>${ssrInterpolate(item.quantity)}</span><button class="px-1 py-0.5 border rounded hover:bg-gray-100" data-v-f5f84525>+</button></div></div>`);
        });
        _push(`<!--]--></div><div class="mt-4 border-t pt-3" data-v-f5f84525><button class="w-full bg-black text-white py-2 rounded-lg hover:bg-gray-800 transition" data-v-f5f84525>View Cart &amp; Checkout</button></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
      _push(ssrRenderComponent(unref(User), {
        class: "w-6 h-6 hover:text-gray-600 cursor-pointer transition-colors",
        onClick: ($event) => navigateTo2("/profile")
      }, null, _parent));
      _push(ssrRenderComponent(unref(Heart), {
        class: "w-6 h-6 hover:text-gray-600 cursor-pointer transition-colors",
        onClick: ($event) => navigateTo2("/wishlist")
      }, null, _parent));
      _push(`</div></div>`);
      if (mobileSidebarOpen.value) {
        _push(`<div class="fixed inset-0 bg-black bg-opacity-50 z-50" data-v-f5f84525><div class="fixed left-0 top-0 w-64 h-full bg-white shadow-lg z-50 flex flex-col overflow-y-auto" data-v-f5f84525><div class="flex justify-end p-4" data-v-f5f84525><button class="focus:outline-none" data-v-f5f84525>`);
        _push(ssrRenderComponent(unref(X), { class: "w-6 h-6" }, null, _parent));
        _push(`</button></div><nav class="flex flex-col" data-v-f5f84525><!--[-->`);
        ssrRenderList(menus, (menu) => {
          _push(`<div class="border-b border-gray-200" data-v-f5f84525><button class="w-full text-left px-4 py-3 font-medium hover:bg-gray-100 flex justify-between items-center" data-v-f5f84525>${ssrInterpolate(menu.name)} <span class="text-lg font-bold" data-v-f5f84525>${ssrInterpolate(openMenus.value.includes(menu.name) ? "-" : "+")}</span></button>`);
          if (openMenus.value.includes(menu.name)) {
            _push(`<ul class="flex flex-col bg-gray-50" data-v-f5f84525><!--[-->`);
            ssrRenderList(menu.items, (item) => {
              _push(`<li class="px-6 py-2 hover:bg-gray-100 cursor-pointer transition-colors text-sm" data-v-f5f84525>${ssrInterpolate(item)}</li>`);
            });
            _push(`<!--]--></ul>`);
          } else {
            _push(`<!---->`);
          }
          _push(`</div>`);
        });
        _push(`<!--]--></nav></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</header>`);
    };
  }
};
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/common/Header.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const Header = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["__scopeId", "data-v-f5f84525"]]);
const _sfc_main$4 = {
  __name: "CommonFooter",
  __ssrInlineRender: true,
  setup(__props) {
    useRouter$1();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<footer${ssrRenderAttrs(mergeProps({ class: "bg-black text-white px-6 py-8 sm:py-10" }, _attrs))} data-v-a788ece5><div class="max-w-7xl mx-auto flex flex-wrap gap-8" data-v-a788ece5><div class="flex flex-wrap gap-8 flex-1 min-w-[250px]" data-v-a788ece5><div class="flex-1 min-w-[120px]" data-v-a788ece5><h3 class="text-lg font-bold mb-3 sm:mb-4" data-v-a788ece5>Street Style Store</h3><ul class="space-y-1 sm:space-y-2 text-sm" data-v-a788ece5><li class="hover:underline cursor-pointer" data-v-a788ece5>Returns &amp; Exchange</li><li class="hover:underline cursor-pointer" data-v-a788ece5>Shipping Policy</li><li class="hover:underline cursor-pointer" data-v-a788ece5>FAQ&#39;s</li><li class="hover:underline cursor-pointer" data-v-a788ece5>Terms &amp; Conditions</li></ul></div><div class="flex-1 min-w-[120px]" data-v-a788ece5><h3 class="text-lg font-bold mb-3 sm:mb-4" data-v-a788ece5>About SSS</h3><ul class="space-y-1 sm:space-y-2 text-sm" data-v-a788ece5><li class="hover:underline cursor-pointer" data-v-a788ece5>About Us</li><li class="hover:underline cursor-pointer" data-v-a788ece5>Privacy Policy</li></ul></div></div><div class="flex-1 min-w-[250px]" data-v-a788ece5><h3 class="text-lg font-bold mb-3 sm:mb-4" data-v-a788ece5>Connect</h3><p class="text-sm mb-1 sm:mb-2" data-v-a788ece5>Office: No.356, Aggarwal Metro Heights, Netaji Subhash Place, Pitampura, North West Delhi, Delhi-110034</p><p class="text-sm mb-3 sm:mb-4" data-v-a788ece5>Phone: +91-11-41171712 (10 AM - 6 PM, Mon to Sat)</p><div class="flex space-x-4 mb-3 text-xl" data-v-a788ece5><a href="https://www.facebook.com/streetstylestorefans" target="_blank" class="hover:text-gray-400" data-v-a788ece5><i class="fab fa-facebook-f" data-v-a788ece5></i></a><a href="https://www.instagram.com/streetstylestoreofficial" target="_blank" class="hover:text-gray-400" data-v-a788ece5><i class="fab fa-instagram" data-v-a788ece5></i></a></div><div class="flex flex-col sm:flex-row sm:space-x-3 space-y-2 sm:space-y-0" data-v-a788ece5><a href="https://play.google.com/store" target="_blank" class="flex items-center justify-center sm:justify-start bg-white text-black px-3 py-2 rounded shadow-sm hover:shadow-md transition" data-v-a788ece5><i class="fab fa-google-play text-xl mr-2" data-v-a788ece5></i><span class="text-xs sm:text-sm" data-v-a788ece5>Google Play</span></a><a href="https://www.apple.com/app-store/" target="_blank" class="flex items-center justify-center sm:justify-start bg-white text-black px-3 py-2 rounded shadow-sm hover:shadow-md transition" data-v-a788ece5><i class="fab fa-apple text-xl mr-2" data-v-a788ece5></i><span class="text-xs sm:text-sm" data-v-a788ece5>App Store</span></a></div></div></div><div class="border-t border-white/20 mt-6 sm:mt-8 pt-3 text-center text-sm text-white/70" data-v-a788ece5><p data-v-a788ece5>Street Style Store © 2024. All Rights Reserved.</p></div></footer>`);
    };
  }
};
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/common/Footer.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const Footer = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["__scopeId", "data-v-a788ece5"]]);
const _sfc_main$3 = {
  __name: "TopBar",
  __ssrInlineRender: true,
  setup(__props) {
    const items = [
      "Flat 20% off on first order! Use code FIRST20",
      "Trending: 'Streetwear Essentials' collection live now",
      "Free delivery on orders above ₹199",
      "Quote of the day: 'Style is a way to say who you are without speaking.'",
      "New arrivals: Check out the latest accessories!"
    ];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "w-full bg-black text-white overflow-hidden relative h-10 flex items-center" }, _attrs))} data-v-c7ee2e9e><div class="whitespace-nowrap flex animate-marquee" data-v-c7ee2e9e><!--[-->`);
      ssrRenderList(items, (item, index) => {
        _push(`<span class="mx-2 text-[10px] sm:text-xs md:text-sm lg:text-base font-medium cursor-pointer" data-v-c7ee2e9e>${ssrInterpolate(item)} <span class="mx-2" data-v-c7ee2e9e>|</span></span>`);
      });
      _push(`<!--]--><!--[-->`);
      ssrRenderList(items, (item, index) => {
        _push(`<span class="mx-2 text-[10px] sm:text-xs md:text-sm lg:text-base font-medium cursor-pointer" data-v-c7ee2e9e>${ssrInterpolate(item)} <span class="mx-2" data-v-c7ee2e9e>|</span></span>`);
      });
      _push(`<!--]--></div></div>`);
    };
  }
};
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/TopBar.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const TopBar = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["__scopeId", "data-v-c7ee2e9e"]]);
const _sfc_main$2 = {
  __name: "app",
  __ssrInlineRender: true,
  setup(__props) {
    const { vueApp } = useNuxtApp();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NuxtPage = __nuxt_component_0;
      _push(`<div${ssrRenderAttrs(mergeProps({
        id: "app",
        class: "font-poppins relative min-h-screen"
      }, _attrs))}>`);
      _push(ssrRenderComponent(TopBar, null, null, _parent));
      _push(ssrRenderComponent(Header, null, null, _parent));
      _push(ssrRenderComponent(_component_NuxtPage, null, null, _parent));
      _push(ssrRenderComponent(Footer, null, null, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("app.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const _sfc_main$1 = {
  __name: "nuxt-error-page",
  __ssrInlineRender: true,
  props: {
    error: Object
  },
  setup(__props) {
    const props = __props;
    const _error = props.error;
    _error.stack ? _error.stack.split("\n").splice(1).map((line) => {
      const text = line.replace("webpack:/", "").replace(".vue", ".js").trim();
      return {
        text,
        internal: line.includes("node_modules") && !line.includes(".cache") || line.includes("internal") || line.includes("new Promise")
      };
    }).map((i) => `<span class="stack${i.internal ? " internal" : ""}">${i.text}</span>`).join("\n") : "";
    const statusCode = Number(_error.statusCode || 500);
    const is404 = statusCode === 404;
    const statusMessage = _error.statusMessage ?? (is404 ? "Page Not Found" : "Internal Server Error");
    const description = _error.message || _error.toString();
    const stack = void 0;
    const _Error404 = defineAsyncComponent(() => import("./_nuxt/error-404-CuWYoOBQ.js"));
    const _Error = defineAsyncComponent(() => import("./_nuxt/error-500-D67kyYdK.js"));
    const ErrorTemplate = is404 ? _Error404 : _Error;
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(ErrorTemplate), mergeProps({ statusCode: unref(statusCode), statusMessage: unref(statusMessage), description: unref(description), stack: unref(stack) }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/nuxt/dist/app/components/nuxt-error-page.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = {
  __name: "nuxt-root",
  __ssrInlineRender: true,
  setup(__props) {
    const IslandRenderer = () => null;
    const nuxtApp = useNuxtApp();
    nuxtApp.deferHydration();
    nuxtApp.ssrContext.url;
    const SingleRenderer = false;
    provide(PageRouteSymbol, useRoute());
    nuxtApp.hooks.callHookWith((hooks) => hooks.map((hook) => hook()), "vue:setup");
    const error = useError();
    const abortRender = error.value && !nuxtApp.ssrContext.error;
    onErrorCaptured((err, target, info) => {
      nuxtApp.hooks.callHook("vue:error", err, target, info).catch((hookError) => console.error("[nuxt] Error in `vue:error` hook", hookError));
      {
        const p = nuxtApp.runWithContext(() => showError(err));
        onServerPrefetch(() => p);
        return false;
      }
    });
    const islandContext = nuxtApp.ssrContext.islandContext;
    return (_ctx, _push, _parent, _attrs) => {
      ssrRenderSuspense(_push, {
        default: () => {
          if (unref(abortRender)) {
            _push(`<div></div>`);
          } else if (unref(error)) {
            _push(ssrRenderComponent(unref(_sfc_main$1), { error: unref(error) }, null, _parent));
          } else if (unref(islandContext)) {
            _push(ssrRenderComponent(unref(IslandRenderer), { context: unref(islandContext) }, null, _parent));
          } else if (unref(SingleRenderer)) {
            ssrRenderVNode(_push, createVNode(resolveDynamicComponent(unref(SingleRenderer)), null, null), _parent);
          } else {
            _push(ssrRenderComponent(unref(_sfc_main$2), null, null, _parent));
          }
        },
        _: 1
      });
    };
  }
};
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/nuxt/dist/app/components/nuxt-root.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
let entry;
{
  entry = async function createNuxtAppServer(ssrContext) {
    const vueApp = createApp(_sfc_main);
    const nuxt = createNuxtApp({ vueApp, ssrContext });
    try {
      await applyPlugins(nuxt, plugins);
      await nuxt.hooks.callHook("app:created", vueApp);
    } catch (error) {
      await nuxt.hooks.callHook("app:error", error);
      nuxt.payload.error ||= createError(error);
    }
    if (ssrContext?._renderResponse) {
      throw new Error("skipping render");
    }
    return vueApp;
  };
}
const entry$1 = (ssrContext) => entry(ssrContext);
export {
  _export_sfc as _,
  useNuxtApp as a,
  useRuntimeConfig as b,
  nuxtLinkDefaults as c,
  asyncDataDefaults as d,
  entry$1 as default,
  createError as e,
  useCartStore as f,
  useRoute as g,
  defineNuxtRouteMiddleware as h,
  navigateTo as n,
  resolveRouteObject as r,
  useRouter as u
};
//# sourceMappingURL=server.mjs.map
