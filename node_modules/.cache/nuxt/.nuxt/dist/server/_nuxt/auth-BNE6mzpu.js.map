{"version":3,"file":"auth-BNE6mzpu.js","sources":["../../../../../../../stores/auth.js"],"sourcesContent":["// stores/auth.js\r\nimport { defineStore } from \"pinia\";\r\nimport { useCookies } from \"@vueuse/integrations/useCookies\";\r\n\r\nexport const useAuthStore = defineStore(\"auth\", {\r\n  state: () => ({\r\n    key: null,           // üîë Backend session key\r\n    id_customer: null,\r\n    name: null,\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    error: null,\r\n    mobileNumber: \"\",    // User input mobile number\r\n    newCustomer: false,  // Flag for new users\r\n  }),\r\n\r\n  actions: {\r\n    /** -------------------------------\r\n     * üîë Set customer session (Pinia + cookies only)\r\n     * ------------------------------- */\r\n    setCustomer(payload) {\r\n      if (!payload || !payload.key) {\r\n        console.warn(\"[Auth Store] ‚ö†Ô∏è Invalid payload:\", payload);\r\n        return;\r\n      }\r\n\r\n      this.key = payload.key;\r\n      this.id_customer = payload.id_customer;\r\n      this.name = payload.name;\r\n      this.isAuthenticated = true;\r\n\r\n      const cookies = useCookies();\r\n      cookies.set(\"key\", this.key, { path: \"/\", sameSite: \"lax\" });\r\n      cookies.set(\"id_customer\", this.id_customer, { path: \"/\", sameSite: \"lax\" });\r\n      cookies.set(\"name\", this.name, { path: \"/\", sameSite: \"lax\" });\r\n\r\n      console.log(\"[Auth Store] ‚úÖ Session persisted in cookies:\", {\r\n        key: this.key,\r\n        id_customer: this.id_customer,\r\n        name: this.name,\r\n      });\r\n    },\r\n\r\n    loadSession() {\r\n      if (process.client) {\r\n        const cookies = useCookies();\r\n        this.key = cookies.get(\"key\") || null;\r\n        this.id_customer = cookies.get(\"id_customer\") || null;\r\n        this.name = cookies.get(\"name\") || null;\r\n        this.isAuthenticated = !!this.key;\r\n\r\n        console.log(\"[Auth Store] üîÑ Session loaded from cookies:\", {\r\n          key: this.key,\r\n          id_customer: this.id_customer,\r\n          name: this.name,\r\n          isAuthenticated: this.isAuthenticated,\r\n        });\r\n      }\r\n    },\r\n\r\n    // ‚úÖ New helper: Call once on app startup\r\n    initAuth() {\r\n      console.log(\"[Auth Store] üöÄ Initializing auth...\");\r\n      this.loadSession();\r\n    },\r\n\r\n    logout() {\r\n      this.key = null;\r\n      this.id_customer = null;\r\n      this.name = null;\r\n      this.isAuthenticated = false;\r\n\r\n      const cookies = useCookies();\r\n      cookies.remove(\"key\");\r\n      cookies.remove(\"id_customer\");\r\n      cookies.remove(\"name\");\r\n\r\n      console.log(\"[Auth Store] ‚ùå Session cleared\");\r\n    },\r\n\r\n    /** -------------------------------\r\n     * üì© Send login OTP\r\n     * ------------------------------- */\r\n    async sendLoginOTP() {\r\n      this.loading = true;\r\n      this.error = null;\r\n      try {\r\n        console.log(\"[Auth Store] üì© Sending OTP for mobile:\", this.mobileNumber);\r\n\r\n        const res = await $fetch(\"http://localhost:4000/send-otp\", {\r\n          method: \"POST\",\r\n          body: { mobileNumber: this.mobileNumber, site: \"yourSiteName\" },\r\n        });\r\n\r\n        console.log(\"[Auth Store] üì© OTP Send Response:\", res);\r\n        return res;\r\n      } catch (err) {\r\n        this.error = err?.data?.error || \"Send OTP failed\";\r\n        console.error(\"[Auth Store] ‚ùå Send OTP Error:\", err);\r\n        throw err;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    /** -------------------------------\r\n     * üì© Verify OTP\r\n     * ------------------------------- */\r\n    async verifyOtp(otp) {\r\n      this.loading = true;\r\n      this.error = null;\r\n      try {\r\n        console.log(\"[Auth Store] üì© Verifying OTP for mobile:\", this.mobileNumber);\r\n\r\n        const res = await $fetch(\"http://localhost:4000/verify-otp\", {\r\n          method: \"POST\",\r\n          body: {\r\n            mobileNumber: this.mobileNumber,\r\n            otp,\r\n            newCustomer: this.newCustomer,\r\n            site: \"yourSiteName\",\r\n          },\r\n        });\r\n\r\n        console.log(\"[Gateway Proxy] Response Status:\", res.status);\r\n        console.log(\"[Gateway Proxy] Response Data:\", res);\r\n\r\n        if (res.newUser) {\r\n          this.newCustomer = true;\r\n          console.log(\"[Auth Store] üîπ New user detected, registration required\");\r\n          return { newUser: true };\r\n        }\r\n\r\n        // Persist session in cookies only\r\n        const sessionPayload = {\r\n          key: res.key,\r\n          id_customer: res.id_customer,\r\n          name: res.first_name || res.email || \"User\",\r\n        };\r\n        this.setCustomer(sessionPayload);\r\n\r\n        console.log(\"[Auth Store] ‚úÖ OTP verified and session stored in cookies:\", sessionPayload);\r\n        return res;\r\n      } catch (err) {\r\n        this.error = err?.data?.error || \"Verify OTP failed\";\r\n        console.error(\"[Auth Store] ‚ùå OTP Verify Error:\", err);\r\n        throw err;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    /** -------------------------------\r\n     * üìù Login with password\r\n     * ------------------------------- */\r\n    async loginWithPassword(password) {\r\n      this.loading = true;\r\n      this.error = null;\r\n      try {\r\n        console.log(\"[Auth Store] üì© Login with password for mobile:\", this.mobileNumber);\r\n\r\n        const res = await $fetch(\"http://localhost:4000/login-password\", {\r\n          method: \"POST\",\r\n          body: { mobileNumber: this.mobileNumber, password, site: \"yourSiteName\" },\r\n        });\r\n\r\n        this.setCustomer(res); // persist session in cookies only\r\n        console.log(\"[Auth Store] ‚úÖ Password login successful:\", res);\r\n        return res;\r\n      } catch (err) {\r\n        this.error = err?.data?.error || \"Login failed\";\r\n        console.error(\"[Auth Store] ‚ùå Login Error:\", err);\r\n        throw err;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    /** -------------------------------\r\n     * üìù Register new user\r\n     * ------------------------------- */\r\n    async register(email, password) {\r\n      this.loading = true;\r\n      this.error = null;\r\n      try {\r\n        console.log(\"[Auth Store] üì© Registering mobile:\", this.mobileNumber);\r\n\r\n        const res = await $fetch(\"http://localhost:4000/register\", {\r\n          method: \"POST\",\r\n          body: {\r\n            mobileNumber: this.mobileNumber,\r\n            email,\r\n            password,\r\n            site: \"yourSiteName\",\r\n            checkout: false,\r\n          },\r\n        });\r\n\r\n        this.setCustomer(res); // persist session in cookies only\r\n        console.log(\"[Auth Store] ‚úÖ Registration successful:\", res);\r\n        return res;\r\n      } catch (err) {\r\n        this.error = err?.data?.error || \"Register failed\";\r\n        console.error(\"[Auth Store] ‚ùå Register Error:\", err);\r\n        throw err;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":";;AAIO,MAAM,eAAe,YAAY,QAAQ;AAAA,EAC9C,OAAO,OAAO;AAAA,IACZ,KAAK;AAAA;AAAA,IACL,aAAa;AAAA,IACb,MAAM;AAAA,IACN,iBAAiB;AAAA,IACjB,SAAS;AAAA,IACT,OAAO;AAAA,IACP,cAAc;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,EAAA;AAAA,EAGf,SAAS;AAAA;AAAA;AAAA;AAAA,IAIP,YAAY,SAAS;AACnB,UAAI,CAAC,WAAW,CAAC,QAAQ,KAAK;AAC5B,gBAAQ,KAAK,oCAAoC,OAAO;AACxD;AAAA,MACF;AAEA,WAAK,MAAM,QAAQ;AACnB,WAAK,cAAc,QAAQ;AAC3B,WAAK,OAAO,QAAQ;AACpB,WAAK,kBAAkB;AAEvB,YAAM,UAAU,WAAA;AAChB,cAAQ,IAAI,OAAO,KAAK,KAAK,EAAE,MAAM,KAAK,UAAU,OAAO;AAC3D,cAAQ,IAAI,eAAe,KAAK,aAAa,EAAE,MAAM,KAAK,UAAU,OAAO;AAC3E,cAAQ,IAAI,QAAQ,KAAK,MAAM,EAAE,MAAM,KAAK,UAAU,OAAO;AAE7D,cAAQ,IAAI,gDAAgD;AAAA,QAC1D,KAAK,KAAK;AAAA,QACV,aAAa,KAAK;AAAA,QAClB,MAAM,KAAK;AAAA,MAAA,CACZ;AAAA,IACH;AAAA,IAEA,cAAc;AAAA,IAed;AAAA;AAAA,IAGA,WAAW;AACT,cAAQ,IAAI,sCAAsC;AAClD,WAAK,YAAA;AAAA,IACP;AAAA,IAEA,SAAS;AACP,WAAK,MAAM;AACX,WAAK,cAAc;AACnB,WAAK,OAAO;AACZ,WAAK,kBAAkB;AAEvB,YAAM,UAAU,WAAA;AAChB,cAAQ,OAAO,KAAK;AACpB,cAAQ,OAAO,aAAa;AAC5B,cAAQ,OAAO,MAAM;AAErB,cAAQ,IAAI,gCAAgC;AAAA,IAC9C;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,eAAe;AACnB,WAAK,UAAU;AACf,WAAK,QAAQ;AACb,UAAI;AACF,gBAAQ,IAAI,2CAA2C,KAAK,YAAY;AAExE,cAAM,MAAM,MAAM,OAAO,kCAAkC;AAAA,UACzD,QAAQ;AAAA,UACR,MAAM,EAAE,cAAc,KAAK,cAAc,MAAM,eAAA;AAAA,QAAe,CAC/D;AAED,gBAAQ,IAAI,sCAAsC,GAAG;AACrD,eAAO;AAAA,MACT,SAAS,KAAK;AACZ,aAAK,QAAQ,KAAK,MAAM,SAAS;AACjC,gBAAQ,MAAM,kCAAkC,GAAG;AACnD,cAAM;AAAA,MACR,UAAA;AACE,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,UAAU,KAAK;AACnB,WAAK,UAAU;AACf,WAAK,QAAQ;AACb,UAAI;AACF,gBAAQ,IAAI,6CAA6C,KAAK,YAAY;AAE1E,cAAM,MAAM,MAAM,OAAO,oCAAoC;AAAA,UAC3D,QAAQ;AAAA,UACR,MAAM;AAAA,YACJ,cAAc,KAAK;AAAA,YACnB;AAAA,YACA,aAAa,KAAK;AAAA,YAClB,MAAM;AAAA,UAAA;AAAA,QACR,CACD;AAED,gBAAQ,IAAI,oCAAoC,IAAI,MAAM;AAC1D,gBAAQ,IAAI,kCAAkC,GAAG;AAEjD,YAAI,IAAI,SAAS;AACf,eAAK,cAAc;AACnB,kBAAQ,IAAI,0DAA0D;AACtE,iBAAO,EAAE,SAAS,KAAA;AAAA,QACpB;AAGA,cAAM,iBAAiB;AAAA,UACrB,KAAK,IAAI;AAAA,UACT,aAAa,IAAI;AAAA,UACjB,MAAM,IAAI,cAAc,IAAI,SAAS;AAAA,QAAA;AAEvC,aAAK,YAAY,cAAc;AAE/B,gBAAQ,IAAI,8DAA8D,cAAc;AACxF,eAAO;AAAA,MACT,SAAS,KAAK;AACZ,aAAK,QAAQ,KAAK,MAAM,SAAS;AACjC,gBAAQ,MAAM,oCAAoC,GAAG;AACrD,cAAM;AAAA,MACR,UAAA;AACE,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,kBAAkB,UAAU;AAChC,WAAK,UAAU;AACf,WAAK,QAAQ;AACb,UAAI;AACF,gBAAQ,IAAI,mDAAmD,KAAK,YAAY;AAEhF,cAAM,MAAM,MAAM,OAAO,wCAAwC;AAAA,UAC/D,QAAQ;AAAA,UACR,MAAM,EAAE,cAAc,KAAK,cAAc,UAAU,MAAM,eAAA;AAAA,QAAe,CACzE;AAED,aAAK,YAAY,GAAG;AACpB,gBAAQ,IAAI,6CAA6C,GAAG;AAC5D,eAAO;AAAA,MACT,SAAS,KAAK;AACZ,aAAK,QAAQ,KAAK,MAAM,SAAS;AACjC,gBAAQ,MAAM,+BAA+B,GAAG;AAChD,cAAM;AAAA,MACR,UAAA;AACE,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,SAAS,OAAO,UAAU;AAC9B,WAAK,UAAU;AACf,WAAK,QAAQ;AACb,UAAI;AACF,gBAAQ,IAAI,uCAAuC,KAAK,YAAY;AAEpE,cAAM,MAAM,MAAM,OAAO,kCAAkC;AAAA,UACzD,QAAQ;AAAA,UACR,MAAM;AAAA,YACJ,cAAc,KAAK;AAAA,YACnB;AAAA,YACA;AAAA,YACA,MAAM;AAAA,YACN,UAAU;AAAA,UAAA;AAAA,QACZ,CACD;AAED,aAAK,YAAY,GAAG;AACpB,gBAAQ,IAAI,2CAA2C,GAAG;AAC1D,eAAO;AAAA,MACT,SAAS,KAAK;AACZ,aAAK,QAAQ,KAAK,MAAM,SAAS;AACjC,gBAAQ,MAAM,kCAAkC,GAAG;AACnD,cAAM;AAAA,MACR,UAAA;AACE,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC;"}