import { u as useAuthStore } from "./auth-BNE6mzpu.js";
import { h as defineNuxtRouteMiddleware, n as navigateTo } from "../server.mjs";
import "pinia";
import "@vueuse/integrations/useCookies";
import "vue";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/ofetch/dist/node.mjs";
import "#internal/nuxt/paths";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/hookable/dist/index.mjs";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/unctx/dist/index.mjs";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/h3/dist/index.mjs";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/defu/dist/defu.mjs";
import "vue-router";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/radix3/dist/index.mjs";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/ufo/dist/index.mjs";
import "C:/Users/DELL/SSS-Website/E-commerce-Store/node_modules/klona/dist/index.mjs";
import "vue/server-renderer";
import "lucide-vue-next";
import "slugify";
const auth = defineNuxtRouteMiddleware((to, from) => {
  const auth2 = useAuthStore();
  auth2.loadSession();
  console.log("[Auth Middleware] Session loaded:", auth2.$state);
  if (!auth2.isAuthenticated) {
    console.log("[Auth Middleware] No session found. Redirecting to /login...");
    return navigateTo("/login");
  }
  if (auth2.isAuthenticated && to.path === "/login") {
    console.log("[Auth Middleware] Already logged in, redirecting to home...");
    return navigateTo("/");
  }
  console.log("[Auth Middleware] Navigation allowed to:", to.path);
});
export {
  auth as default
};
//# sourceMappingURL=auth-BN3AZtwB.js.map
