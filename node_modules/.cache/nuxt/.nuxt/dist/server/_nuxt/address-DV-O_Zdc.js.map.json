{"file":"address-DV-O_Zdc.js","mappings":";;;AAKA,MAAM,UAAU;AAAA,EACd,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,WAAW,KAAK,KAAK,KAAK;AAAA,EAC1B,QAAQ;AAAA,EACR,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,gBAAgB;AAAA,EACpB;AAAA,EACE,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,MAAM;AAAA,EACN,SAAS;AACX;AAEY,MAAC,kBAAkB,YAAY,WAAW;AAAA,EACpD,OAAO,OAAO;AAAA,IACZ,WAAW,CAAA;AAAA,IACX,iBAAiB,CAAA;AAAA,IACjB,iBAAiB,CAAA;AAAA,IACjB,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,aAAa,CAAA;AAAA,IACb,wBAAwB;AAAA,EAC5B;AAAA,EAEE,SAAS;AAAA,IACP,cAAc,CAAC,UAAU,MAAM;AAAA,IAC/B,oBAAoB,CAAC,UAAU,MAAM;AAAA,IACrC,iBAAiB,CAAC,UAAU,MAAM;AAAA,IAClC,sBAAsB,CAAC,UAAU,MAAM;AAAA,IACvC,oBAAoB,CAAC,UAAU,MAAM;AAAA,IACrC,gBAAgB,CAAC,UAAU,MAAM;AAAA,IACjC,2BAA2B,CAAC,UAAU,MAAM;AAAA,EAChD;AAAA,EAEE,SAAS;AAAA,IACP,MAAM,OAAO;AACX,YAAM,KAAK,eAAc;AAAA,IAC3B;AAAA,IAEA,MAAM,iBAAiB;AACrB,YAAM,OAAO,aAAY;AACzB,UAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,KAAK;AACtC,gBAAQ,KAAK,oEAAoE;AACjF;AAAA,MACF;AAEA,YAAM,cAAc,KAAK,UAAU;AAAA,QACjC,gBAAgB;AAAA,QAChB,aAAa,KAAK;AAAA,QAClB,eAAe,KAAK;AAAA;AAAA,QACpB,MAAM,QAAQ;AAAA,MACtB,CAAO;AAED,cAAQ,IAAI,+CAA+C,WAAW;AAEtE,UAAI;AACF,cAAM,EAAE,KAAI,IAAK,MAAM,MAAM,KAAK,QAAQ,YAAY,aAAa;AAAA,UACjE,SAAS,EAAE,gBAAgB,mBAAkB;AAAA,QACvD,CAAS;AACD,gBAAQ,IAAI,gDAAgD,IAAI;AAChE,aAAK,aAAa,IAAI;AAAA,MACxB,SAAS,OAAO;AACd,gBAAQ,MAAM,+CAA+C,KAAK;AAAA,MACpE;AAAA,IACF;AAAA,IAEA,MAAM,YAAY,SAAS;AACzB,YAAM,OAAO,aAAY;AACzB,UAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,IAAK;AAExC,YAAM,cAAc,KAAK,UAAU;AAAA,QACjC,gBAAgB;AAAA,QAChB,aAAa,KAAK;AAAA,QAClB,eAAe,KAAK;AAAA,QACpB,SAAS;AAAA,QACT,MAAM,QAAQ;AAAA,MACtB,CAAO;AAED,cAAQ,IAAI,4CAA4C,WAAW;AAEnE,YAAM,MAAM,KAAK,QAAQ,YAAY,aAAa;AAAA,QAChD,SAAS,EAAE,gBAAgB,mBAAkB;AAAA,MACrD,CAAO;AAED,YAAM,KAAK,eAAc;AAAA,IAC3B;AAAA,IAEA,MAAM,cAAc,YAAY;AAC9B,YAAM,OAAO,aAAY;AACzB,UAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,IAAK;AAExC,YAAM,cAAc,KAAK,UAAU;AAAA,QACjC,gBAAgB;AAAA,QAChB,aAAa,KAAK;AAAA,QAClB,eAAe,KAAK;AAAA,QACpB;AAAA,QACA,MAAM,QAAQ;AAAA,QACd,SAAS,QAAQ;AAAA,MACzB,CAAO;AAED,cAAQ,IAAI,8CAA8C,WAAW;AAErE,YAAM,MAAM,KAAK,QAAQ,YAAY,aAAa;AAAA,QAChD,SAAS,EAAE,gBAAgB,mBAAkB;AAAA,MACrD,CAAO;AAED,YAAM,KAAK,eAAc;AAEzB,UAAI,KAAK,iBAAiB,eAAe,YAAY;AACnD,aAAK,kBAAkB,CAAA;AAAA,MACzB;AAAA,IACF;AAAA;AAAA,IAGA,oBAAoB,KAAK;AAAE,WAAK,mBAAmB;AAAA,IAAI;AAAA,IACvD,qBAAqB,KAAK;AAAE,WAAK,oBAAoB;AAAA,IAAI;AAAA,IACzD,mBAAmB,KAAK;AAAE,WAAK,kBAAkB;AAAA,IAAI;AAAA,IACrD,mBAAmB,KAAK;AAAE,WAAK,kBAAkB;AAAA,IAAI;AAAA,IACrD,eAAe,KAAK;AAAE,WAAK,cAAc;AAAA,IAAI;AAAA,IAC7C,0BAA0B,KAAK;AAAE,WAAK,yBAAyB;AAAA,IAAI;AAAA,IAEnE,aAAa,MAAM;AACjB,UAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,KAAK,WAAW,GAAG;AAC7C,aAAK,YAAY,CAAA;AACjB,aAAK,kBAAkB,CAAA;AACvB,YAAI,CAAC,KAAK,mBAAmB,OAAO,KAAK,KAAK,eAAe,EAAE,WAAW,GAAG;AAC3E,eAAK,kBAAkB,CAAA;AAAA,QACzB;AACA;AAAA,MACF;AAEA,WAAK,YAAY;AACjB,YAAM,CAAC,iBAAiB,GAAG,cAAc,IAAI;AAE7C,UAAI,iBAAiB;AACnB,aAAK,kBAAkB;AACvB,YAAI,CAAC,KAAK,mBAAmB,OAAO,KAAK,KAAK,eAAe,EAAE,WAAW,GAAG;AAC3E,eAAK,kBAAkB;AAAA,QACzB;AAAA,MACF,WAAW,eAAe,WAAW,GAAG;AACtC,YAAI,CAAC,KAAK,mBAAmB,OAAO,KAAK,KAAK,eAAe,EAAE,WAAW,GAAG;AAC3E,eAAK,kBAAkB,eAAe,CAAC;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AAAA,EACJ;AACA,CAAC;","names":[],"sources":["../../../../../../../stores/address.js"],"sourcesContent":["// stores/address.js\r\nimport { defineStore } from 'pinia'\r\nimport axios from 'axios'\r\nimport { useAuthStore } from './auth' // üëà Auth store import\r\n\r\nconst globals = {\r\n  currencySymbol: \"‚Çπ\",\r\n  siteLogo: \"https://images.streetstylestore.com/new-sssnew-images/sss-logo.jpg\",\r\n  cookieAge: 60 * 60 * 24 * 180,\r\n  apiUrl: \"https://api.streetstylestore.com/\",\r\n  apiKey: {\r\n    product: \"Bm23NaocNyDb2qWiT9Mpn4qXdSmq7bqdoLzY6espTB3MC6Rx\",\r\n    config: \"Bm23NaocNyDb2qWiT9Mpn4qXdSmq7bqdoLzY6espTB3MC6Rx\",\r\n    pinCode: \"Bm23NaocNyDb2qWiT9Mpn4qXdSmq7bqdoLzY6espTB3MC6Rx\",\r\n    productReviews: \"9phsLIHZD9o6iBVkETcf2D3BFWTRCqDX\",\r\n  },\r\n  serviceUrl: \"http://localhost:5000/\",\r\n  gatewayUrl: \"https://gateway.streetstylestore.com/gateway/v1/\",\r\n  baseUrl: \"https://streetstylestore.com/\",\r\n  site: \"sss\",\r\n  version: \"1\",\r\n}\r\n\r\nexport const useAddressStore = defineStore('address', {\r\n  state: () => ({\r\n    addresses: [],\r\n    lastUsedAddress: {},\r\n    deliveryAddress: {},\r\n    saveAddressClick: false,\r\n    saveAddressButton: false,\r\n    editAddress: {},\r\n    checkAddressValidation: false,\r\n  }),\r\n\r\n  getters: {\r\n    getAddresses: (state) => state.addresses,\r\n    getLastUsedAddress: (state) => state.lastUsedAddress,\r\n    getAddressClick: (state) => state.saveAddressClick,\r\n    getSaveAddressButton: (state) => state.saveAddressButton,\r\n    getDeliveryAddress: (state) => state.deliveryAddress,\r\n    getEditAddress: (state) => state.editAddress,\r\n    getCheckAddressValidation: (state) => state.checkAddressValidation,\r\n  },\r\n\r\n  actions: {\r\n    async init() {\r\n      await this.fetchAddresses()\r\n    },\r\n\r\n    async fetchAddresses() {\r\n      const auth = useAuthStore()\r\n      if (!auth.isAuthenticated || !auth.key) {\r\n        console.warn(\"[Address Store] ‚ö†Ô∏è User not authenticated, skipping fetchAddresses\")\r\n        return\r\n      }\r\n\r\n      const requestData = JSON.stringify({\r\n        gateway_action: 'customer/getCustomerAddresses',\r\n        id_customer: auth.id_customer,\r\n        user_hash_key: auth.key, // üëà renamed to match gateway expectations\r\n        site: globals.site,\r\n      })\r\n\r\n      console.log(\"[Address Store] üì§ Fetch Addresses Request:\", requestData)\r\n\r\n      try {\r\n        const { data } = await axios.post(globals.gatewayUrl, requestData, {\r\n          headers: { 'Content-Type': 'application/json' },\r\n        })\r\n        console.log(\"[Address Store] üì© Fetch Addresses Response:\", data)\r\n        this.setAddresses(data)\r\n      } catch (error) {\r\n        console.error(\"[Address Store] ‚ùå Error fetching addresses:\", error)\r\n      }\r\n    },\r\n\r\n    async saveAddress(payLoad) {\r\n      const auth = useAuthStore()\r\n      if (!auth.isAuthenticated || !auth.key) return\r\n\r\n      const requestData = JSON.stringify({\r\n        gateway_action: 'customer/saveCustomerAddress',\r\n        id_customer: auth.id_customer,\r\n        user_hash_key: auth.key,\r\n        address: payLoad,\r\n        site: globals.site,\r\n      })\r\n\r\n      console.log(\"[Address Store] üì§ Save Address Request:\", requestData)\r\n\r\n      await axios.post(globals.gatewayUrl, requestData, {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n\r\n      await this.fetchAddresses()\r\n    },\r\n\r\n    async removeAddress(id_address) {\r\n      const auth = useAuthStore()\r\n      if (!auth.isAuthenticated || !auth.key) return\r\n\r\n      const requestData = JSON.stringify({\r\n        gateway_action: 'customer/removeCustomerAddress',\r\n        id_customer: auth.id_customer,\r\n        user_hash_key: auth.key,\r\n        id_address,\r\n        site: globals.site,\r\n        version: globals.version,\r\n      })\r\n\r\n      console.log(\"[Address Store] üì§ Remove Address Request:\", requestData)\r\n\r\n      await axios.post(globals.gatewayUrl, requestData, {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n\r\n      await this.fetchAddresses()\r\n\r\n      if (this.deliveryAddress?.id_address === id_address) {\r\n        this.deliveryAddress = {}\r\n      }\r\n    },\r\n\r\n    // Local setters\r\n    setSaveAddressClick(val) { this.saveAddressClick = val },\r\n    setSaveAddressButton(val) { this.saveAddressButton = val },\r\n    setLastUsedAddress(val) { this.lastUsedAddress = val },\r\n    setDeliveryAddress(val) { this.deliveryAddress = val },\r\n    setEditAddress(val) { this.editAddress = val },\r\n    setCheckAddressValidation(val) { this.checkAddressValidation = val },\r\n\r\n    setAddresses(list) {\r\n      if (!Array.isArray(list) || list.length === 0) {\r\n        this.addresses = []\r\n        this.lastUsedAddress = {}\r\n        if (!this.deliveryAddress || Object.keys(this.deliveryAddress).length === 0) {\r\n          this.deliveryAddress = {}\r\n        }\r\n        return\r\n      }\r\n\r\n      this.addresses = list\r\n      const [lastUsedAddress, ...otherAddresses] = list\r\n\r\n      if (lastUsedAddress) {\r\n        this.lastUsedAddress = lastUsedAddress\r\n        if (!this.deliveryAddress || Object.keys(this.deliveryAddress).length === 0) {\r\n          this.deliveryAddress = lastUsedAddress\r\n        }\r\n      } else if (otherAddresses.length === 1) {\r\n        if (!this.deliveryAddress || Object.keys(this.deliveryAddress).length === 0) {\r\n          this.deliveryAddress = otherAddresses[0]\r\n        }\r\n      }\r\n    }\r\n  },\r\n})\r\n"],"version":3}