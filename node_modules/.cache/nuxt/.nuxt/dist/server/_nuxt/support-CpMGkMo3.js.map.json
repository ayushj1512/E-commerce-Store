{"file":"support-CpMGkMo3.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAsGa,iBAAA;AACb,UAAM,UAAU,IAAI,EAAE;AACtB,UAAM,UAAU,IAAI,IAAI;AAGxB,UAAM,kBAAkB,IAAI,KAAK;AACjC,UAAM,iBAAiB,IAAI,EAAE;AAC7B,UAAM,eAAe,IAAI,EAAE;;AA5GpB,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,qCAAiC,MAAA,CAAA,CAAA,qIAAA;UAO/B,QAAA,OAAO;;MAKF,WAAA,QAAA,MAAQ,WAAM,GAAA;;;;AAYTC,sBAAA,QAAA,QAAV,WAAM;mQAM8BC,eAAA,OAAO,SAAS,OAASA,eAAA,OAAO,OAAO,sBAGtEC,eAAA,CAAA,OAAO,WAAM,SAAA,4BAAA,0BAAA,gCAAA,CAAA,sBAElBD,eAAA,OAAO,MAAM,2EAGyBA,eAAA,OAAO,UAAU;;;;UAOxD,gBAAA,OAAe;8TAONA,eAAA,eAAA,MAAe,SAAS,OAASA,eAAA,eAAA,MAAe,OAAO,uEAEnBA,eAAA,eAAA,MAAe,MAAM;sBAKpD,eAAA,MAAe,UAAQ,CAA9B,QAAG;+BAGFC,eAAA,CAAA,IAAI,WAAM,aAAA,2BAAA,uBAAA,gBAAA,CAAA,yDAEID,eAAA,IAAI,OAAO,8DACQA,eAAA,IAAI,IAAI;;kQAM1C,aAAA,KAAY,CAAA,4TAAA;AAAA;;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrInterpolate","_ssrRenderClass"],"sources":["../../../../../../../pages/profile/support.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-white px-4 py-6\">\r\n    <!-- Heading -->\r\n    <h1 class=\"text-2xl sm:text-3xl font-extrabold text-black text-center mb-6\">\r\n      Support Tickets\r\n    </h1>\r\n\r\n    <!-- Loading -->\r\n    <div v-if=\"loading\" class=\"text-center py-10 text-gray-600\">\r\n      Loading tickets...\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div v-else-if=\"tickets.length === 0\" class=\"text-center py-10\">\r\n      <p class=\"text-gray-700 text-base font-medium\">\r\n        You have no support tickets yet üõ†Ô∏è\r\n      </p>\r\n      <p class=\"text-gray-500 text-sm\">\r\n        Need help? Raise a ticket and we'll assist you promptly.\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Tickets List -->\r\n    <div v-else class=\"space-y-4 max-w-3xl mx-auto\">\r\n      <div\r\n        v-for=\"ticket in tickets\"\r\n        :key=\"ticket.ticket_id\"\r\n        class=\"border border-gray-300 rounded-xl p-4 hover:shadow-md transition cursor-pointer bg-white\"\r\n        @click=\"viewTicket(ticket.ticket_id)\"\r\n      >\r\n        <div class=\"flex justify-between items-center mb-2\">\r\n          <h2 class=\"font-semibold text-black\">#{{ ticket.ticket_id }} - {{ ticket.subject }}</h2>\r\n          <span\r\n            class=\"text-xs px-2 py-1 rounded-full\"\r\n            :class=\"ticket.status === 'open' ? 'bg-green-500 text-white' : 'bg-gray-400 text-white'\"\r\n          >\r\n            {{ ticket.status }}\r\n          </span>\r\n        </div>\r\n        <p class=\"text-gray-600 text-sm\">Created: {{ ticket.created_at }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Ticket Detail Modal -->\r\n    <transition name=\"fade-scale\">\r\n      <div\r\n        v-if=\"showTicketModal\"\r\n        class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n      >\r\n        <div\r\n          class=\"bg-white rounded-2xl p-6 sm:p-8 md:p-10 max-w-2xl w-full shadow-xl overflow-y-auto max-h-[80vh]\"\r\n        >\r\n          <h2 class=\"text-xl sm:text-2xl font-bold mb-4\">\r\n            Ticket #{{ selectedTicket.ticket_id }} - {{ selectedTicket.subject }}\r\n          </h2>\r\n          <p class=\"text-gray-600 text-sm mb-4\">Status: {{ selectedTicket.status }}</p>\r\n\r\n          <!-- Ticket messages -->\r\n          <div class=\"space-y-3 mb-4\">\r\n            <div\r\n              v-for=\"msg in selectedTicket.messages\"\r\n              :key=\"msg.id\"\r\n              class=\"p-3 rounded-xl\"\r\n              :class=\"msg.sender === 'customer' ? 'bg-gray-100 text-black' : 'bg-black text-white'\"\r\n            >\r\n              <p class=\"text-sm\">{{ msg.message }}</p>\r\n              <p class=\"text-xs text-gray-500 mt-1\">{{ msg.date }}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Reply Section -->\r\n          <textarea\r\n            v-model=\"replyMessage\"\r\n            placeholder=\"Type your reply...\"\r\n            class=\"w-full border border-gray-300 rounded-xl p-3 focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent mb-4 resize-none\"\r\n            rows=\"4\"\r\n          ></textarea>\r\n          <div class=\"flex justify-end gap-3\">\r\n            <button\r\n              @click=\"submitReply\"\r\n              class=\"px-4 py-2 bg-black text-white rounded-xl hover:bg-gray-800 transition\"\r\n            >\r\n              Send Reply\r\n            </button>\r\n            <button\r\n              @click=\"closeTicketModal\"\r\n              class=\"px-4 py-2 bg-gray-200 rounded-xl hover:bg-gray-300 transition\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useAuthStore } from \"~/stores/auth\";\r\n\r\nconst auth = useAuthStore();\r\nconst tickets = ref([]);\r\nconst loading = ref(true);\r\n\r\n// Ticket modal\r\nconst showTicketModal = ref(false);\r\nconst selectedTicket = ref({});\r\nconst replyMessage = ref(\"\");\r\n\r\n// Fetch ticket list\r\nconst fetchTickets = async () => {\r\n  loading.value = true;\r\n  try {\r\n    if (!auth.isAuthenticated) {\r\n      tickets.value = [];\r\n      return;\r\n    }\r\n\r\n    const requestData = JSON.stringify({\r\n      gateway_action: \"customer/support\",\r\n      action: \"list\",\r\n      version: \"1\",\r\n      id_customer: auth.loginData.id_customer,\r\n    });\r\n\r\n    const response = await axios.post(import.meta.env.VITE_BASE_URL, requestData, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      withCredentials: true,\r\n    });\r\n\r\n    console.log(\"Ticket List Response:\", response.data);\r\n    tickets.value = response.data?.tickets || [];\r\n  } catch (err) {\r\n    console.error(\"Failed to fetch tickets:\", err);\r\n    tickets.value = [];\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// View ticket detail\r\nconst viewTicket = async (ticketId) => {\r\n  try {\r\n    const requestData = JSON.stringify({\r\n      gateway_action: \"customer/support\",\r\n      action: \"detail\",\r\n      version: \"1\",\r\n      id_customer: auth.loginData.id_customer,\r\n      ticket_id: ticketId,\r\n    });\r\n\r\n    const response = await axios.post(import.meta.env.VITE_BASE_URL, requestData, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      withCredentials: true,\r\n    });\r\n\r\n    console.log(\"Ticket Detail Response:\", response.data);\r\n    selectedTicket.value = response.data || {};\r\n    showTicketModal.value = true;\r\n  } catch (err) {\r\n    console.error(\"Failed to fetch ticket detail:\", err);\r\n  }\r\n};\r\n\r\n// Submit reply\r\nconst submitReply = async () => {\r\n  if (!replyMessage.value.trim()) {\r\n    alert(\"Please type a reply message.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const requestData = JSON.stringify({\r\n      gateway_action: \"customer/support\",\r\n      action: \"reply\",\r\n      version: \"1\",\r\n      id_customer: auth.loginData.id_customer,\r\n      ticket_id: selectedTicket.value.ticket_id,\r\n      message: replyMessage.value,\r\n      image: \"\",\r\n    });\r\n\r\n    const response = await axios.post(import.meta.env.VITE_BASE_URL, requestData, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      withCredentials: true,\r\n    });\r\n\r\n    console.log(\"Reply Response:\", response.data);\r\n    alert(\"Reply sent successfully!\");\r\n\r\n    // Refresh ticket detail\r\n    viewTicket(selectedTicket.value.ticket_id);\r\n    replyMessage.value = \"\";\r\n  } catch (err) {\r\n    console.error(\"Failed to send reply:\", err);\r\n    alert(\"Failed to send reply. Please try again.\");\r\n  }\r\n};\r\n\r\n// Close modal\r\nconst closeTicketModal = () => {\r\n  showTicketModal.value = false;\r\n  selectedTicket.value = {};\r\n};\r\n\r\nonMounted(() => {\r\n  fetchTickets();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.fade-scale-enter-active,\r\n.fade-scale-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.fade-scale-enter-from,\r\n.fade-scale-leave-to {\r\n  opacity: 0;\r\n  transform: scale(0.95);\r\n}\r\n\r\n.fade-scale-enter-to,\r\n.fade-scale-leave-from {\r\n  opacity: 1;\r\n  transform: scale(1);\r\n}\r\n</style>\r\n"],"version":3}